{
  "id": "",
  "guid": "",
  "name": "APM - Add WebServer Monitor (443)",
  "description": null,
  "type": "COMPONENT_COMPLETION",
  "change_description": null,
  "target_type": null,
  "input_variables": [
    {
      "name": "Application Manager URL",
      "variable": "apmurl",
      "description": null,
      "required": true,
      "default_value": "http://XXX.XXX.XXX.XXX:9090"
    },
    {
      "name": "Application Manager Key",
      "variable": "apmkey",
      "description": "API Key from Manage Engine, Application Manager",
      "required": true,
      "default_value": "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"
    }
  ],
  "info_messages": [],
  "system_version": "8.4.0 (1007090074)",
  "steps": [
    {
      "name": "Add WebServer Monitor (443)",
      "type": "EMBEDDED_SCRIPT",
      "condition": null,
      "data": {
        "credentials": null,
        "failure_action": "FAIL_STEP",
        "script_contents": "#Created on Commander 8.4\n$DisplayName = \"#{target.deployedName}\" \n$Hostname = \"#{target.dnsName}\" \n$apmkey = \"#{inputVariable['apmkey']}\"\n$apmurl = \"#{inputVariable['apmurl']}\"\n\n#Check All Variables Present\nif(!($DisplayName) -or !($Hostname) -or !($apmkey) -or !($apmurl)){\n        Write-error \"Please provide all required input variables to execute this workflow\"\n        Exit 1} \n        \n#Post Data to APM Web Server\n    Try{\n        $baseURL = $apmurl+\"/AppManager/json/AddMonitor?apikey=$apmkey&\"+\"type=Web Server&displayname=$DisplayName&host=$Hostname&port=443\"\n        $response = Invoke-WebRequest -Uri $baseURL -Method POST\n        $StatusCode = $response.StatusCode \n        if($StatusCode = \"200\"){\n            Write-host \"Monitor added successfully\" -ForegroundColor Green\n            }\n        if($StatusCode -ne \"200\"){\n            Write-Error \"Something went Wrong\"\n            Exit 1\n            }\n        }\n        Catch{\n                write-host \"Caught an exception:\" -ForegroundColor Red\n                write-host \"Exception Type: $($_.Exception.GetType().FullName)\" -ForegroundColor Red\n                write-host \"Exception Message: $($_.Exception.Message)\" -ForegroundColor Red\n                $error[0] | Format-List -Force\n                Exit 1\n                }  ",
        "script_arguments": "",
        "timeout": 300,
        "executable": "powershell.exe",
        "capture_output": true
      }
    }
  ]
}